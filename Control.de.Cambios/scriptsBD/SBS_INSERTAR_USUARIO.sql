CREATE OR REPLACE PROCEDURE SBS_INSERTAR_USUARIO
(
P_ROLID IN SBS_USUARIO.ROLID%TYPE,
P_CODIGOUSUARIO IN SBS_USUARIO.CODIGOUSUARIO%TYPE,
P_CLAVESECRETA IN SBS_USUARIO.CLAVESECRETA%TYPE,
P_EMAIL IN SBS_USUARIO.EMAIL%TYPE,
P_APELLIDOPATERNO IN SBS_USUARIO.APELLIDOPATERNO%TYPE,
P_APELLIDOMATERNO IN SBS_USUARIO.APELLIDOMATERNO%TYPE,
P_PRIMERNOMBRE IN SBS_USUARIO.PRIMERNOMBRE%TYPE,
P_SEGUNDONOMBRE IN SBS_USUARIO.SEGUNDONOMBRE%TYPE,
P_ALIAS IN SBS_USUARIO.ALIAS%TYPE,
P_RESULT OUT NUMBER
)
IS
--==============================================
-- AUTOR: GMATOS
-- OBJETIVO: CREAR USUARIO
-- FECHA CREACION: 29/12/2020
-- DROP PROCEDURE SBS_INSERTAR_USUARIO
--==============================================

V_USUARIOID SBS_USUARIO.USUARIOID%TYPE := 0;
V_REGISTROS NUMBER(1) := 0;

BEGIN
  
   /* ************************************ */
   /* VALIDACIONES
   /* ************************************ */

   SELECT
   COUNT(USUARIOID)
   INTO V_REGISTROS
   FROM SBS_USUARIO
   WHERE
      EMAIL = P_EMAIL
   OR CODIGOUSUARIO = P_CODIGOUSUARIO
   ;
   
   IF V_REGISTROS > 0 THEN
      P_RESULT := -5;    
      RETURN;
   END IF;
   
   BEGIN
     
       SELECT
       NVL(MAX(USUARIOID),0) + 1
       INTO V_USUARIOID
       FROM SBS_USUARIO
       ;
     
       INSERT INTO SBS_USUARIO
       (
       USUARIOID,
       ROLID, 
       CODIGOUSUARIO, 
       CLAVESECRETA, 
       EMAIL, 
       APELLIDOPATERNO, 
       APELLIDOMATERNO, 
       PRIMERNOMBRE, 
       SEGUNDONOMBRE, 
       ALIAS,
       PRIMERAVEZLOGIN, 
       ACTIVO
       )
       SELECT
       V_USUARIOID,
       P_ROLID, 
       P_CODIGOUSUARIO, 
       P_CLAVESECRETA, 
       P_EMAIL, 
       P_APELLIDOPATERNO, 
       P_APELLIDOMATERNO, 
       P_PRIMERNOMBRE, 
       P_SEGUNDONOMBRE, 
       P_ALIAS,
       1,
       1
       FROM DUAL;
       
       IF SQL%ROWCOUNT > 0 THEN
         
          COMMIT;
          P_RESULT := V_USUARIOID;
       
       END IF;
    
       /*   
       
       MERGE INTO SBS_USUARIO U
       USING
       (
             SELECT P_CODIGOUSUARIO as COD_USUARIO
             FROM DUAL
       ) Z
       ON
       (
         U.CODIGOUSUARIO = Z.COD_USUARIO
       )
       WHEN MATCHED THEN
         UPDATE SET
         U.APELLIDOPATERNO = P_APELLIDOPATERNO,
         U.APELLIDOMATERNO = P_APELLIDOMATERNO,
         U.PRIMERNOMBRE = P_PRIMERNOMBRE,
         U.SEGUNDONOMBRE = P_SEGUNDONOMBRE,
         U.ALIAS = P_ALIAS
         WHERE
         U.CODIGOUSUARIO = Z.COD_USUARIO
        WHEN NOT MATCHED THEN
          INSERT
          (
          U.USUARIOID,
          U.ROLID, 
          U.CODIGOUSUARIO, 
          U.CLAVESECRETA, 
          U.EMAIL, 
          U.APELLIDOPATERNO, 
          U.APELLIDOMATERNO, 
          U.PRIMERNOMBRE, 
          U.SEGUNDONOMBRE, 
          U.ALIAS,
          U.PRIMERAVEZLOGIN, 
          U.ACTIVO
          )
          VALUES
          (
          (SELECT NVL(MAX(USUARIOID),0) + 1 FROM SBS_USUARIO),
          P_ROLID, 
          P_CODIGOUSUARIO, 
          P_CLAVESECRETA, 
          P_EMAIL, 
          P_APELLIDOPATERNO, 
          P_APELLIDOMATERNO, 
          P_PRIMERNOMBRE, 
          P_SEGUNDONOMBRE, 
          P_ALIAS,
          1,
          1
          );
        
        COMMIT;
        
        */
       
   EXCEPTION WHEN OTHERS THEN
     
      ROLLBACK;

      DBMS_OUTPUT.PUT_LINE
      (
      'SQLERRM:' || SQLERRM
      || 'ERROR_STACK: ' || DBMS_UTILITY.FORMAT_ERROR_STACK
      || 'ERROR_BACKTRACE: ' || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE
      );
      
      P_RESULT := -1;
   
   END;

END;

/*
CREATE OR REPLACE PUBLIC SYNONYM SBS_INSERTAR_USUARIO
FOR GMATOS.SBS_INSERTAR_USUARIO;
*/

/*
DROP PROCEDURE SBS_INSERTAR_USUARIO;
DROP PROCEDURE SYSTEM.SBS_INSERTAR_USUARIO;
*/


/*

declare
P_ROLID CONSTANT SBS_USUARIO.ROLID%TYPE := 0;
P_CODIGOUSUARIO CONSTANT SBS_USUARIO.CODIGOUSUARIO%TYPE := 'gmatos';
P_CLAVESECRETA CONSTANT SBS_USUARIO.CLAVESECRETA%TYPE := '123456';
P_EMAIL CONSTANT SBS_USUARIO.EMAIL%TYPE := 'gmatos@pruebas.com';
P_APELLIDOPATERNO CONSTANT SBS_USUARIO.APELLIDOPATERNO%TYPE := 'Matos';
P_APELLIDOMATERNO CONSTANT SBS_USUARIO.APELLIDOMATERNO%TYPE := 'Camones';
P_PRIMERNOMBRE CONSTANT SBS_USUARIO.PRIMERNOMBRE%TYPE := 'Guido';
P_SEGUNDONOMBRE CONSTANT SBS_USUARIO.SEGUNDONOMBRE%TYPE := 'Alan';
P_ALIAS CONSTANT SBS_USUARIO.ALIAS%TYPE := 'Guido Matos';

P_RESULT NUMBER(2,0) := 0;

begin
        SBS_INSERTAR_USUARIO (
        P_ROLID,
        P_CODIGOUSUARIO,
        P_CLAVESECRETA,
        P_EMAIL,
        P_APELLIDOPATERNO,
        P_APELLIDOMATERNO,
        P_PRIMERNOMBRE,
        P_SEGUNDONOMBRE,
        P_ALIAS,
        P_RESULT );
        
        dbms_output.put_line('P_RESULT ' || P_RESULT);
        
end;

select*from SBS_USUARIO;
delete from SBS_USUARIO;
commit;
*/
